{"version":3,"sources":["context/TodoContext.js","components/Header.js","components/TaskCountHeader.js","components/AddTodo.js","pages/TodoList.js","pages/PendingTasks.js","pages/CompletedTasks.js","App.js","index.js"],"names":["React","createContext","state","todos","id","desc","status","toggleTodo","todoId","Header","react_default","a","createElement","className","react_router_dom","to","TodoHeader","props","name","count","value","inputValue","onChange","updateInputValue","onClick","addTodo","TodoList","_this","this","TodoContext","Consumer","context","Fragment","components_Header","AddTodo","TaskCountHeader","length","map","todo","todoClassName","bind","key","Component","PendingTasks","filter","CompletedTasks","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","event","setState","target","selectedTodoIndex","findIndex","selectedTodo","objectSpread","task","push","Provider","basename","react_router","path","component","exact","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.833b5ac5.chunk.js","sourcesContent":["import React from 'react';\n\nexport default React.createContext({\n  state: {\n    todos: [\n      { id: 1, desc: 'This is task 1', status: false },\n      { id: 2, desc: 'This is task 2', status: false },\n      { id: 3, desc: 'This is task 3', status: false },\n      { id: 4, desc: 'This is task 4', status: false },\n      { id: 5, desc: 'This is task 5', status: false }\n    ]\n  },\n  toggleTodo: todoId => { }\n})","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Header = () => (\n  <header className='navigation-bar'>\n    <nav className='nav-bar'>\n      <ul className='nav-list'>\n        <li className='nav-list-item'>\n          <NavLink to='/'>All Tasks</NavLink>\n        </li>\n        <li className='nav-list-item'>\n          <NavLink to='/pending'>Pending Tasks</NavLink>\n        </li>\n        <li className='nav-list-item'>\n          <NavLink to='/completed'>Completed Tasks</NavLink>\n        </li>\n      </ul>\n    </nav>\n  </header>\n);\n\nexport default Header;\n","import React from 'react';\n\nfunction TodoHeader(props) {\n  return (\n    <div className='task-count-detail'>Total {props.name} Tasks: {props.count}</div>\n  )\n}\n\nexport default TodoHeader;","import React from 'react';\n\nconst Header = (props) => (\n  <header className='navigation-bar'>\n    <input className='user-todo' value={props.inputValue} onChange={props.updateInputValue} ></input>\n    <button onClick={props.addTodo}>Add Todo</button>\n  </header>\n )\n\nexport default Header;\n","import React from 'react';\nimport TodoContext from '../context/TodoContext'\nimport Header from '../components/Header';\nimport TodoHeader from '../components/TaskCountHeader';\nimport AddTodo from '../components/AddTodo';\n\nclass TodoList extends React.Component {\n  render() {\n    return (\n      <TodoContext.Consumer>\n        {context =>\n          (\n            <React.Fragment>\n              <Header />\n              <AddTodo addTodo={context.addTodo} updateInputValue={context.updateInputValue} />\n              <TodoHeader count={context.todos.length} />\n              {\n                context.todos.map(todo => {\n                  let todoClassName = 'pending';\n                  if (todo.status) {\n                    todoClassName = 'completed'\n                  }\n                  return <div\n                    className={'task ' + todoClassName}\n                    onClick={context.toggleTodo.bind(this, todo.id)}\n                    key={todo.id}>{todo.desc}\n                  </div>\n                })\n              }\n            </React.Fragment>\n          )\n        }\n      </TodoContext.Consumer>\n    )\n  }\n}\n\nexport default TodoList;","import React from 'react';\nimport TodoContext from '../context/TodoContext'\nimport Header from '../components/Header';\nimport TodoHeader from '../components/TaskCountHeader';\n\nclass PendingTasks extends React.Component {\n  render() {\n    return (\n      <TodoContext.Consumer>\n        {context =>\n          (\n            <React.Fragment>\n              <Header />\n              <TodoHeader\n                name='Pending'\n                count={context.todos.filter(todo => !todo.status).length} />\n              {\n                context.todos.filter(todo => !todo.status).map(todo => {\n                  return <div\n                    className='task'\n                    key={todo.id}>{todo.desc}\n                  </div>\n                }\n                )\n              }\n            </React.Fragment>\n          )\n        }\n      </TodoContext.Consumer>\n    )\n  }\n}\n\nexport default PendingTasks;","import React from 'react';\nimport TodoContext from '../context/TodoContext'\nimport Header from '../components/Header';\nimport TodoHeader from '../components/TaskCountHeader';\n\nclass CompletedTasks extends React.Component {\n  render() {\n    return (\n      <TodoContext.Consumer>\n        {context =>\n          (\n            <React.Fragment>\n              <Header />\n              <TodoHeader\n                count={context.todos.filter(todo => todo.status).length}\n                name='Completed'\n              />\n              {\n                context.todos.filter(todo => todo.status).map(todo => {\n                  return <div\n                    className='task'\n                    key={todo.id}>{todo.desc}\n                  </div>\n                }\n                )\n              }\n            </React.Fragment>\n          )\n        }\n      </TodoContext.Consumer>\n    )\n  }\n}\n\nexport default CompletedTasks;","import React from 'react';\nimport './App.css';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport TodoContext from './context/TodoContext';\nimport TodoList from './pages/TodoList'\nimport PendingTasks from './pages/PendingTasks'\nimport CompletedTasks from './pages/CompletedTasks'\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: [\n        { id: 1, desc: 'This is task 1', status: false },\n        { id: 2, desc: 'This is task 2', status: false },\n        { id: 3, desc: 'This is task 3', status: false },\n        { id: 4, desc: 'This is task 4', status: false },\n        { id: 5, desc: 'This is task 5', status: false }\n      ],\n      inputValue: ''\n    }\n  }\n\n  updateInputValue = event => this.setState({ inputValue: event.target.value })\n\n\n  toggleTodo(todoId) {\n    let todos = this.state.todos;\n    let selectedTodoIndex = todos.findIndex(todo => todo.id === todoId);\n    let selectedTodo = { ...todos[selectedTodoIndex] };\n    selectedTodo.status = !selectedTodo.status;\n    todos[selectedTodoIndex] = selectedTodo;\n    this.setState({ todos })\n  }\n\n  addTodo() {\n    const todos = this.state.todos;\n    const lastTaskIndex = todos.length - 1;\n    const newTaskId = todos[lastTaskIndex].id + 1;\n    const task = {\n      id: newTaskId,\n      desc: this.state.inputValue,\n      status: false\n    };\n    todos.push(task);\n    this.setState({ todos });\n  }\n\n  render() {\n    return (\n      <TodoContext.Provider value={{\n        todos: this.state.todos,\n        toggleTodo: this.toggleTodo.bind(this),\n        addTodo: this.addTodo.bind(this),\n        inputValue: this.state.inputValue,\n        updateInputValue: this.updateInputValue.bind(this)\n      }}>\n        <HashRouter basename='/'>\n          <Switch>\n            <Route path='/' component={TodoList} exact />\n            <Route path='/pending' component={PendingTasks} exact />\n            <Route path='/completed' component={CompletedTasks} exact />\n          </Switch>\n        </HashRouter>\n      </TodoContext.Provider>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}